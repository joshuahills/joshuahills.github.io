---
import BaseHead from '../../../components/BaseHead.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../../components/FormattedDate.astro';
import Pill from '../../../components/Pill.astro';
import { tagsColoursMap } from '../tag-colour-map';
import { Tag } from '../../../content/config';

export async function getStaticPaths() {
	const allPosts = (await getCollection('blog'))
		.filter(post => post.data.status === 'published' || import.meta.env.DEV)
		.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
	
  return Tag.options.map(tag => ({ params: { tag }, props: { allPosts: allPosts } }));
}

const { tag } = Astro.params;
const { allPosts } = Astro.props;

const posts = allPosts
	.filter(post => post.data.tags.includes(tag));
---

<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main>
			<div class="container mx-auto px-3 py-5 flex flex-col max-w-4xl">
				<h4 class="text-center text-3xl pb-2">Latest posts with tag "{tag}"</h4>
				{
					posts.length === 0 &&
					import.meta.env.PROD &&
					(
						<div class="text-center block m-auto">
							<h4 class="text-2xl">No posts yet...</h4>
						</div>	
					)
				}
				<section class="w-full">
					<ul>
						{
							posts.map((post) => (
								<li class="pb-2">
									<a href={`/blog/${post.slug}/`}>
										<div class="bg-gradient-to-b dark:from-gray-900 dark:to-slate-800 border from-gray-100 border-gray-200 dark:border-gray-600 rounded-xl p-5 relative overflow-clip">
											<div class="flex flex-row">
												<div class="flex flex-col pb-2">
													<h4 class="title text-xl mr-auto">{post.data.title}</h4>
													<p class="date">
														<FormattedDate date={post.data.pubDate} />
														{
															import.meta.env.DEV && post.data.status !== 'published' &&
																<Pill text={post.data.status} backgroundColour="bg-yellow-200 text-yellow-900" textColour="text-white" />
														}	
													</p>
												</div>
												<span class="flex flex-col ml-auto">
													{
														post.data.tags?.slice(0, 2).map(tag => 
															<Pill text={tag} backgroundColour={tagsColoursMap.get(tag)?.backgroundColour} textColour={tagsColoursMap.get(tag)?.textColour} />)
													}
												</span>
											</div>
											<div class="absolute w-40 h-40 dark:bg-purple-500 rounded-full top-1/4 left-[85%] opacity-40 blur-2xl" class:list={["dark:" + tagsColoursMap.get(post.data.tags[0])!.backgroundColour]}></div>
										</div>
									</a>
								</li>
							))
						}
					</ul>
				</section>
			</div>
		</main>
		<Footer />
	</body>
</html>
